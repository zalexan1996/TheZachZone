// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TZZ.Infrastructure.SQL;

#nullable disable

namespace TZZ.Infrastructure.Migrations
{
    [DbContext(typeof(ZachZoneDbContext))]
    [Migration("20240731021745_SwitchToIdentity")]
    partial class SwitchToIdentity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TZZ.Domain.Entities.TheGameZone.GameComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GameInfoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PostedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("GameInfoId");

                    b.ToTable("GameComment", "TGZ");
                });

            modelBuilder.Entity("TZZ.Domain.Entities.TheGameZone.GameImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("GameInfoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UploadedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("GameInfoId");

                    b.ToTable("GameImage", "TGZ");
                });

            modelBuilder.Entity("TZZ.Domain.Entities.TheGameZone.GameInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Categories")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("UploadDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("GameInfo", "TGZ");
                });

            modelBuilder.Entity("TZZ.Domain.Entities.TheGameZone.GameStatistic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GameInfoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PlayedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("GameInfoId");

                    b.ToTable("GameStatistic", "TGZ");
                });

            modelBuilder.Entity("TZZ.Domain.Entities.TheGameZone.GameComment", b =>
                {
                    b.HasOne("TZZ.Domain.Entities.TheGameZone.GameInfo", "GameInfo")
                        .WithMany("Comments")
                        .HasForeignKey("GameInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GameInfo");
                });

            modelBuilder.Entity("TZZ.Domain.Entities.TheGameZone.GameImage", b =>
                {
                    b.HasOne("TZZ.Domain.Entities.TheGameZone.GameInfo", "GameInfo")
                        .WithMany()
                        .HasForeignKey("GameInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GameInfo");
                });

            modelBuilder.Entity("TZZ.Domain.Entities.TheGameZone.GameStatistic", b =>
                {
                    b.HasOne("TZZ.Domain.Entities.TheGameZone.GameInfo", "GameInfo")
                        .WithMany()
                        .HasForeignKey("GameInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GameInfo");
                });

            modelBuilder.Entity("TZZ.Domain.Entities.TheGameZone.GameInfo", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
